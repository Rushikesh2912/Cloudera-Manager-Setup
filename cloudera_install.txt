Take ec2 intance
ami: ami-0763cf792771fe1bd
size: m4x.large
storage: 80

sudo vi /etc/yum.repos.d/CentOS-Base.repo

ESC
:%d

paste this 

[base]
name=CentOS-7 - Base
baseurl=https://vault.centos.org/7.9.2009/os/x86_64/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

[updates]
name=CentOS-7 - Updates
baseurl=https://vault.centos.org/7.9.2009/updates/x86_64/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

[extras]
name=CentOS-7 - Extras
baseurl=https://vault.centos.org/7.9.2009/extras/x86_64/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

[centosplus]
name=CentOS-7 - Plus
baseurl=https://vault.centos.org/7.9.2009/centosplus/x86_64/
gpgcheck=1
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

sudo yum clean all

sudo yum makecache

sudo yum install wget -y

sudo sysctl -a | grep vm.swappiness

 sudo su -c 'cat >>/etc/sysctl.conf <<EOL
 'vm.swappiness=1' 
EOL' 

sudo sysctl -p

# Create or overwrite the rc.local file with the necessary commands
echo "#!/bin/bash" | sudo tee /etc/rc.d/rc.local
echo "# Disable Transparent Huge Pages" | sudo tee -a /etc/rc.d/rc.local
echo "echo never > /sys/kernel/mm/transparent_hugepage/enabled" | sudo tee -a /etc/rc.d/rc.local
echo "echo never > /sys/kernel/mm/transparent_hugepage/defrag" | sudo tee -a /etc/rc.d/rc.local

# Make rc.local executable
sudo chmod +x /etc/rc.d/rc.local

cat /sys/kernel/mm/transparent_hugepage/enabled
cat /sys/kernel/mm/transparent_hugepage/defrag

# Update SELinux configuration to disable it
echo "SELINUX=disabled" | sudo tee /etc/selinux/config

sestatus

sudo su -c "touch /home/centos/.ssh/config; echo -e 'Host *\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null' >> /home/centos/.ssh/config"

echo -e  'y\n'| ssh-keygen -t rsa -P "" -f $HOME/.ssh/id_rsa

cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys

sudo systemctl restart sshd.service

ssh localhost

exit

sudo yum install java-1.8.0-openjdk -y

make the image

=================================
install mysql

wget https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm

md5sum mysql57-community-release-el7-9.noarch.rpm

sudo rpm -ivh mysql57-community-release-el7-9.noarch.rpm

sudo yum install --nogpgcheck mysql-server -y

sudo systemctl start mysqld

sudo systemctl status mysqld

sudo grep 'temporary password' /var/log/mysql/mysqld.log

sudo mysql_secure_installation

n, y, y, n, y, y

mysqladmin -u root -p version

mysql -u root -p

exit;

==================================

launch the more ec2 using that which we have created with same key and sg

send pem key to the main host
using pscp or scp

[On Powershell]
.\pscp.exe -i .\testy.ppk testy.pem clustercmd.sh centos@ip:/home/.ssh

[On linux]
scp -i cloudera.pem cloudera.pem centos@13.126.28.164:/home/centos

chmod 400 cloudera.pem

sudo vi cluster

put all ip in clutser file

:wq

sudo vi clustercmd.sh

for i in `cat cluster`; do
ssh -t -i ./cloudera.pem centos@$i $* #change the keyname
done

:wq
===================================
Install JDBC On All Host

sh clustercmd.sh wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.tar.gz

sh clustercmd.sh tar zxvf mysql-connector-java-5.1.46.tar.gz

sh clustercmd.sh sudo mkdir -p /usr/share/java/

sh clustercmd.sh cd mysql-connector-java-5.1.46

sh clustercmd.sh sudo cp /home/centos/mysql-connector-java-5.1.46/mysql-connector-java-5.1.46-bin.jar /usr/share/java/mysql-connector-java.jar
===================================
Create SCM Database

mysql -u root -p

CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL ON scm.* TO 'scm'@'%' IDENTIFIED BY 'P@ssw0rd';
SHOW DATABASES;

exit;

=================================

launch windows machine 

take c4xlarge and 80gb with same sg

update the sg 'rdp to anywhere' and 'all traffic to same sg', 'cutsomtcp to 7180 anywhere'

Setup The CM7 Or CDH7 Local Repository (On Webserver)

steps
Open your work-space or Your windows & Linux local machine browser (chrome)

download the repo from the link  

cm7 
https://drive.google.com/file/d/1g39MsKlo9rqp9siM6g66oi2adrdmUEvi/view

cdh7
https://drive.google.com/file/d/1SPp6CWFhsQ-0N233AAXHlCROGUppegto/view

you will see two folders i.e cm7 & cdh7.

Please send only the cm7 and cdh7 on your instance.

[Linux] scp -i key.pem cm7 cdh7 centos@ip:/home/centos 

[Windows] pscp.exe -i key.ppk cm7 cdh7 centos@ip:/home/centos

================================================

Setup The Webserver

sudo yum install httpd -y

sudo chkconfig httpd on

sudo service httpd status

sudo service httpd start

tar -xvf cm7

tar -xvf cdh7

sudo mv cm7/ cdh7/ /var/www/html/

================================
sudo vi /etc/yum.repos.d/cloudera-repo.repo

[cloudera-repo]
name=cloudera-repo
baseurl=http://<Webserver_Private_IP>/cm7
enabled=1
gpgcheck=0

:wq

sudo yum clean all

sudo yum makecache

optional if fails: sudo yum install java-1.8.0-openjdk

sudo yum install cloudera-manager-server cloudera-manager-daemons -y

echo "ssl = 0" | sudo tee -a /etc/my.cnf

sudo systemctl restart mysqld

sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql -h 172.31.15.59 scm scm P@ssw0rd

sudo service cloudera-scm-server start 

sudo service cloudera-scm-server status

http://ip:7180

admin
admin

Try Cloudera Data Platform for 60 days

continue >> continue >> name of clutser >> provide the hostname >> 

custom repo for cloudera manager agent

http://13.126.28.164/cm7/

http://13.126.28.164/cdh7/p/cdh7/7.1.3.0/parcels/

continue 

choose custome services

hdfs, hive, hive on tez, hue, oozie, yarn, yarn queue manager, zookeeper

Setup DatabaseðŸ”—

Login On Database server host and create the databases:

mysql -u root -p
Enter the password

create database hive DEFAULT CHARACTER SET utf8;
grant all on hive.* TO 'hive'@'%' IDENTIFIED BY 'P@ssw0rd';

create database hue DEFAULT CHARACTER SET utf8;
grant all on hue.* TO 'hue'@'%' IDENTIFIED BY 'P@ssw0rd';

create database rman DEFAULT CHARACTER SET utf8;
grant all on rman.* TO 'rman'@'%' IDENTIFIED BY 'P@ssw0rd';

create database oozie DEFAULT CHARACTER SET utf8;
grant all on oozie.* TO 'oozie'@'%' IDENTIFIED BY 'P@ssw0rd';

create database navs DEFAULT CHARACTER SET utf8;
grant all on navs.* TO 'navs'@'%' IDENTIFIED BY 'P@ssw0rd';

create database navms DEFAULT CHARACTER SET utf8;
grant all on navms.* TO 'navms'@'%' IDENTIFIED BY 'P@ssw0rd';

create database actmo DEFAULT CHARACTER SET utf8;
grant all on actmo.* TO 'actmo'@'%' IDENTIFIED BY 'P@ssw0rd';

create database sentry DEFAULT CHARACTER SET utf8;
grant all on sentry.* TO 'sentry'@'%' IDENTIFIED BY 'P@ssw0rd';

CREATE USER 'temp'@'%' IDENTIFIED BY 'P@ssw0rd';

GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, PROCESS, REFERENCES, INDEX, ALTER, SHOW DATABASES, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER ON *.* TO 'temp'@'%' WITH GRANT OPTION;

exit
